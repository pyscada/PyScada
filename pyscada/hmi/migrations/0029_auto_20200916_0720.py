# Generated by Django 2.2.8 on 2020-09-16 07:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("pyscada", "0061_devicereadtask"),
        ("hmi", "0028_auto_20200915_1540"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="controlitem",
            name="color_1",
        ),
        migrations.RemoveField(
            model_name="controlitem",
            name="color_2",
        ),
        migrations.RemoveField(
            model_name="controlitem",
            name="color_3",
        ),
        migrations.RemoveField(
            model_name="controlitem",
            name="color_level_1",
        ),
        migrations.RemoveField(
            model_name="controlitem",
            name="color_level_2",
        ),
        migrations.RemoveField(
            model_name="controlitem",
            name="display_value_color_type",
        ),
        migrations.RemoveField(
            model_name="controlitem",
            name="display_value_mode",
        ),
        migrations.RemoveField(
            model_name="controlitem",
            name="display_value_transformation",
        ),
        migrations.RemoveField(
            model_name="controlitem",
            name="display_value_transformation_parameter",
        ),
        migrations.CreateModel(
            name="DisplayValueOption",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=400)),
                (
                    "display_value_color_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "No color"),
                            (1, "2 color"),
                            (2, "3 colors"),
                            (3, "color gradient"),
                        ],
                        default=0,
                        help_text="For boolean no level needed and will use color 1 and 2",
                    ),
                ),
                ("color_level_1", models.PositiveSmallIntegerField(default=0)),
                (
                    "color_level_1_type",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "color 1 =< level 1"), (1, "color 1 < level 1")],
                        default=0,
                        help_text="Only needed for 2 or 3 colors",
                    ),
                ),
                (
                    "color_level_2",
                    models.PositiveSmallIntegerField(
                        default=50, help_text="Only needed for 3 colors and gradient"
                    ),
                ),
                (
                    "color_level_2_type",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "color 2 =< level 2"), (1, "color 2 < level 2")],
                        default=0,
                        help_text="Only needed for 3 colors",
                    ),
                ),
                (
                    "display_value_mode",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Value only"),
                            (1, "Color only"),
                            (2, "Value and color"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "display_value_transformation",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "None"),
                            (1, "Timestamp to local date"),
                            (2, "Dictionary"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "display_value_transformation_parameter",
                    models.CharField(blank=True, default="", max_length=400, null=True),
                ),
                (
                    "color_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="color_1",
                        to="pyscada.Color",
                    ),
                ),
                (
                    "color_2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="color_2",
                        to="pyscada.Color",
                    ),
                ),
                (
                    "color_3",
                    models.ForeignKey(
                        blank=True,
                        help_text="Only needed for 3 colors",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="color_3",
                        to="pyscada.Color",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="controlitem",
            name="display_value_options",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="hmi.DisplayValueOption",
            ),
        ),
    ]
